---
title: "Project 1"
editor: visual
---
Executive Summary

This analysis aimed to evaluate the effectiveness of different fundraising strategies, specifically the use of matching grants, on donation amounts and rates. The dataset analyzed contained information on charitable donations, including the treatment (fundraising strategy) applied, donation amounts, donor demographics, and other relevant variables.

Key Findings:

Summary Statistics:

The Matching Grant treatment group had a higher average donation amount ($0.97) compared to the Control group ($0.81).
The donation rate was also higher for the Matching Grant group (2.20%) than the Control group (1.79%).
Visualizations:

The distribution of donation amounts showed a long-tailed pattern, with most donations being relatively small and a few larger donations.
Box plots revealed that the Matching Grant group tended to have a wider range of donation amounts compared to the Control group, both overall and when broken down by gender.
T-test:

The t-test comparing the mean donation amounts between the Control and Matching Grant groups yielded a p-value of 0.055, which is slightly above the conventional significance threshold of 0.05.
While not statistically significant at the 5% level, the p-value suggests a potential trend that warrants further investigation.
Regression Analysis:

The linear regression model indicated that the Matching Grant treatment had a statistically significant positive effect on donation amounts (coefficient = 0.173, p-value = 0.045), even after controlling for other demographic variables.
However, the effect size was relatively small.
Gender and most other demographic variables did not show statistically significant effects on donation amounts.

Conclusions and Recommendations:

Based on the analysis, the following conclusions can be drawn:

The Matching Grant treatment appears to be slightly more effective than the standard Control letter in increasing donation amounts, as evidenced by the higher average donation and the positive regression coefficient.

While the t-test did not show a statistically significant difference in mean donation amounts between the Control and Matching Grant groups at the 5% level, the p-value was close to the threshold, suggesting a potential trend.

Gender and other demographic variables did not have a significant impact on donation amounts in this analysis.

Recommendations:

Further Research: Given the close p-value in the t-test, it may be beneficial to conduct further research with a larger sample size or additional data to confirm the findings and better understand the impact of matching grants on donation amounts.

Fundraising Strategy: Non-profit organizations could consider incorporating matching grants as part of their fundraising strategy, as the analysis suggests a small but positive impact on donations. However, the effect size should be taken into account when evaluating the cost-effectiveness of implementing such a strategy.

Donor Segmentation: While demographic variables did not significantly influence donation amounts in this analysis, further exploration of donor segmentation and tailored fundraising approaches could be valuable in optimizing fundraising efforts.

Continuous Monitoring and Optimization: Ongoing monitoring and analysis of fundraising campaign performance, coupled with data-driven optimization, can help organizations refine their strategies and maximize the impact of their fundraising efforts.

Overall, this analysis provides insights into the effectiveness of matching grants as a fundraising strategy and highlights the importance of data-driven decision-making in the non-profit sector.
The purpose of the code is to analyze the impact of different fundraising strategies (treatments) on donation amounts and rates. It calculates summary statistics, visualizes the data, and performs statistical tests to compare the effectiveness of different treatments.

The code takes a dataset as input, which is read from a Stata file (karlan_list_2007 (1).dta). The dataset likely contains information about donations, treatments, and demographic variables.

The code produces several outputs, including:

Summary statistics (average donation, donation rate, and count) for each treatment group
Visualizations (bar plots and box plots) showing the distribution of donation amounts across different treatments and demographic groups
Results of a t-test comparing the mean donation amounts between the Control and Matching Grant groups
Results of a linear regression analysis to identify the effects of different variables (treatment, gender, demographics) on donation amounts
The code achieves its purpose through the following steps:
a) It imports the necessary Python libraries (pandas, matplotlib, scipy.stats, and statsmodels.api).
b) It reads the dataset from the Stata file using pandas.
c) It calculates summary statistics (average donation, donation rate, and count) for each treatment group using pandas' groupby and aggregate functions.
d) It creates visualizations (bar plots and box plots) to explore the distribution of donation amounts across different treatments and demographic groups using matplotlib.
e) It performs a t-test to compare the mean donation amounts between the Control and Matching Grant groups using scipy.stats.ttest_ind.
f) It prepares the data for regression analysis by selecting relevant columns and dropping rows with missing values.
g) It defines the independent variables (treatment, gender, demographics) and the dependent variable (donation amount).
h) It fits a linear regression model using statsmodels.OLS and interprets the regression results.

Important logic flows and data transformations:

Grouping the data by treatment and aggregating to calculate summary statistics
Filtering the data to include only donors for visualizing donation amount distributions
Subsetting the data and dropping missing values for regression analysis
Adding a constant term to the independent variables for the regression model
The code follows a typical data analysis workflow, starting with data loading, followed by exploratory data analysis (summary statistics and visualizations), and then moving on to statistical testing (t-test) and regression analysis to identify the effects of different variables on the outcome of interest (donation amount).

```{python}
import pandas as pd
# Read in the data
data = pd.read_stata('/home/jovyan/Desktop/new web 111/sheena_website 2 2/sheena_website 2/projects/project1/karlan_list_2007 (1).dta')
data.head()
```

```{python}
data.columns
```

```{python}
# Calculate summary statistics for donation amounts and donation rates for each treatment group
summary_stats = data.groupby('treatment').agg(
    avg_donation=('amount', 'mean'),
    donation_rate=('gave', 'mean'),
    count=('treatment', 'count')
).reset_index()

summary_stats

```

The summary statistics by treatment group are as follows:

Control Group (Standard Letter):
Average Donation: $0.81
Donation Rate: 1.79%


Matching Grant Letter:
Average Donation: $0.97
Donation Rate: 2.20%

```{python}
import matplotlib.pyplot as plt

# Descriptive statistics for key variables
descriptive_stats = data[['treatment', 'amount', 'female']].describe()

# Mean donation amount across different treatments
mean_donations = data.groupby('treatment')['amount'].mean()

# Visualization of mean donation amounts by treatment
plt.figure(figsize=(10, 6))
mean_donations.plot(kind='bar')
plt.title('Mean Donation Amount by Treatment')
plt.xlabel('Treatment')
plt.ylabel('Mean Donation Amount (USD)')
plt.xticks(ticks=[0, 1, 2], labels=['Control', 'Matching Grant', 'Challenge Grant'], rotation=0)
plt.grid(axis='y')


plt.show()


```

```{python}
# Retry plotting the distribution of donation amounts by treatment group
import matplotlib.pyplot as plt

# Filter out non-donors for the donation amount analysis
donors = data[data['gave'] == 1]

# Plot the distribution of donation amounts by treatment group
plt.figure(figsize=(14, 7))
plt.boxplot([donors[donors['treatment'] == 0]['amount'], 
             donors[donors['treatment'] == 1]['amount'], 
             donors[donors['treatment'] == 2]['amount']], 
            labels=['Control', 'Matching Grant', 'Challenge Grant'])

plt.title('Distribution of Donation Amounts by Treatment Group')
plt.xlabel('Treatment Group')
plt.ylabel('Donation Amount (USD)')

plt.show()

```

## Donation patterns
```{python}
# Plotting the distribution of donation amounts
plt.figure(figsize=(12, 6))
plt.hist(data['amount'], bins=50, edgecolor='k', alpha=0.7)
plt.title('Distribution of Donation Amounts')
plt.xlabel('Donation Amount (USD)')
plt.ylabel('Frequency')
plt.grid(axis='y')
plt.show()

# Creating box plots to compare donation amounts across different treatment groups
plt.figure(figsize=(12, 6))
data.boxplot(column='amount', by='treatment', grid=False, showfliers=False)
plt.title('Donation Amounts by Treatment Group')
plt.suptitle('')
plt.xlabel('Treatment Group')
plt.ylabel('Donation Amount (USD)')
plt.xticks(ticks=[1, 2], labels=['Control', 'Matching Grant'])
plt.show()

# Creating box plots to compare donation amounts by gender within each treatment group
plt.figure(figsize=(12, 6))
data.boxplot(column='amount', by=['treatment', 'female'], grid=False, showfliers=False)
plt.title('Donation Amounts by Treatment and Gender')
plt.suptitle('')
plt.xlabel('Treatment and Gender')
plt.ylabel('Donation Amount (USD)')
plt.xticks(ticks=[1, 2, 3, 4], labels=['Control - Male', 'Control - Female', 'Matching Grant - Male', 'Matching Grant - Female'])
plt.show()

```

Distribution of Donation Amounts:

The histogram shows the distribution of donation amounts across the dataset, highlighting that most donations are relatively small, with a few larger donations creating a long tail.
Box Plots of Donation Amounts by Treatment:

The box plots compare donation amounts across the Control and Matching Grant groups. The median donation amount appears similar, but the Matching Grant group shows a slightly higher range of donation amounts.
Box Plots of Donation Amounts by Treatment and Gender:

These box plots show donation amounts broken down by treatment group and gender. Both male and female donors in the Matching Grant group tend to have a wider range of donation amounts compared to the Control group.


## Statistical Testing

```{python}
from scipy.stats import ttest_ind
# Extracting donation amounts for each treatment group
control_group = data[data['treatment'] == 0]['amount']
matching_grant_group = data[data['treatment'] == 1]['amount']
challenge_grant_group = data[data['treatment'] == 2]['amount']

# Performing t-test
t_test_result = ttest_ind(control_group, matching_grant_group, equal_var=False, nan_policy='omit')

t_test_result


```

T-test Results
The t-test comparing the mean donation amounts between the Control and Matching Grant groups yields the following results:

T-statistic: -1.918
P-value: 0.055
The p-value of 0.055 is slightly above the conventional significance threshold of 0.05, suggesting that the difference in mean donation amounts between the Control and Matching Grant groups is not statistically significant at the 5% level. However, it is close to the threshold, indicating a potential trend that may warrant further investigation.



## Regression Analysis

```{python}
import statsmodels.api as sm

# Prepare the data for regression analysis
# Using only the relevant columns and dropping rows with missing values
regression_data = data[['treatment', 'amount', 'female', 'pwhite', 'pblack', 'page18_39', 'ave_hh_sz', 'median_hhincome', 'powner', 'psch_atlstba', 'pop_propurban']].dropna()

# Define the independent variables (adding a constant for the intercept)
X = regression_data[['treatment', 'female', 'pwhite', 'pblack', 'page18_39', 'ave_hh_sz', 'median_hhincome', 'powner', 'psch_atlstba', 'pop_propurban']]
X = sm.add_constant(X)

# Define the dependent variable
y = regression_data['amount']

# Fit the linear regression model
model = sm.OLS(y, X).fit()

# Display the regression results
regression_results = model.summary()
regression_results

```

Regression Analysis Results
The linear regression model results provide the following insights:

Treatment (Matching Grant):

Coefficient: 0.173
P-value: 0.045
The positive coefficient indicates that the Matching Grant treatment has a small but statistically significant effect on donation amounts compared to the Control group.
Gender (Female):

Coefficient: -0.128
P-value: 0.157
The negative coefficient suggests that females tend to donate slightly less than males, although this effect is not statistically significant.
Other Variables:

Most other demographic variables (e.g., proportion of white residents, median household income) do not show statistically significant effects on donation amounts.


### Summary and findings

T-test: The t-test results indicated no statistically significant difference in mean donation amounts between the Control and Matching Grant groups at the 5% level, although the p-value was close to the threshold (0.055).

Regression Analysis: The regression results suggest that the Matching Grant treatment has a statistically significant positive effect on donation amounts, even after controlling for other demographic factors. However, the effect size is small.


### Conclusion

The Matching Grant treatment appears to be slightly more effective than the standard Control letter in increasing donation amounts.

Gender and other demographic variables did not have a significant impact on donation amounts in this analysis.

### Recommendation

Further Research: Given the close p-value in the t-test, it may be beneficial to conduct further research with a larger sample size or additional data to confirm these findings.

Fundraising Strategy: Non-profits could consider using matching grants as part of their fundraising strategy, as it shows a small but positive impact on donations.

